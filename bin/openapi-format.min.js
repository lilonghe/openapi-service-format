#!/usr/bin/env node
import a from"path";import{generateApi as u}from"swagger-typescript-api";import i from"fs";function n(e){if(typeof e!="object"||e===null)return e;if(Array.isArray(e))return e.map(r=>n(r));let t={};if(e.$ref)return t.$ref=e.$ref,t;for(let[r,o]of Object.entries(e))r==="properties"||r==="items"||r==="components"||r==="definitions"||typeof o=="object"&&o!==null?t[r]=n(o):t[r]=o;return t}async function d(){let e=a.resolve(process.cwd(),"openapi.config.js");return i.existsSync(e)||(console.error("Error: openapi.config.js configuration file not found in current directory"),process.exit(1)),(await import(e)).default}async function y(){try{let e=await d();if(e.list)for(let t of e.list)await l(t);else await l(e);console.log("API generation completed successfully!")}catch(e){console.error("Error generating API:",e),process.exit(1)}}async function l(e){try{let t=e.outputPath.split("/").pop(),r=e.outputPath.replace(t,""),o=a.resolve(process.cwd(),e.apiConfigPath),s;try{if(o.endsWith(".json"))s=JSON.parse(i.readFileSync(o,"utf8"));else if(o.endsWith(".yaml")||o.endsWith(".yml"))s=(await import("js-yaml")).default.load(i.readFileSync(o,"utf8"));else throw new Error("Unsupported OpenAPI file format. Only JSON and YAML are supported.")}catch(c){console.error("Error reading OpenAPI file:",c),process.exit(1)}let f=e.cleanup?n(s):s,p=a.join(process.cwd(),".temp-openapi.json");i.writeFileSync(p,JSON.stringify(f,null,2)),await u({...e,fileName:t,output:a.resolve(process.cwd(),r),input:p,httpClientType:e.client||"axios",unwrapResponseData:!0}),e.debug||i.unlinkSync(p)}catch(t){console.error("Error generating API:",t),process.exit(1)}}y();
